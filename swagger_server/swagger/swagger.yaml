openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/tutorial/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /student/{student_id}:
    get:
      summary: gets student
      description: Returns a single student.
      operationId: get_student_by_id
      parameters:
      - name: student_id
        in: path
        description: the uid
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Successful operation!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        "400":
          description: Invalid ID.
        "404":
          description: Not found.
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: deletes a student
      description: |
        delete a single student
      operationId: delete_student
      parameters:
      - name: student_id
        in: path
        description: the uid
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: integer
      responses:
        "200":
          description: Successful operation!
          content:
            application/json:
              schema:
                type: object
                format: Student
                x-content-type: application/json
        "400":
          description: Bad Request.
        "404":
          description: Student with specified student_id cannot be found.
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /student:
    post:
      summary: Add a new student.
      description: Adds an item to the system.
      operationId: add_student
      requestBody:
        description: Student item to add.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        "200":
          description: created
          content:
            application/json:
              schema:
                type: string
                format: uuid
                x-content-type: application/json
        "400":
          description: "Invalid input, object invalid"
        "409":
          description: Already exists
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    Student:
      required:
      - first_name
      - last_name
      type: object
      properties:
        student_id:
          type: integer
          description: Student ID number.
          example: 123456
        first_name:
          type: string
          description: First name of student.
          example: Ada
        last_name:
          type: string
          description: Last name of student.
          example: Vardar
        grade_records:
          type: array
          description: Array of student records of grades.
          example:
          - 9
          - 8.5
          - 6
          - 7.5
          items:
            type: number
            format: float
      example:
        student_id: 123456
        last_name: Vardar
        grade_records:
        - 9
        - 8.5
        - 6
        - 7.5
        first_name: Ada
    GradeRecord:
      required:
      - grade
      - subject
      type: object
      properties:
        subject_name:
          type: string
          description: Name of the course.
          example: DevOps and Cloud Based Software
        grade:
          maximum: 10
          minimum: 0
          type: number
          description: Grade obtained from the course.
          format: float
          example: 6.5

